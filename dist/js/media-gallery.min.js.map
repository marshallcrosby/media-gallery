{"version":3,"sources":["media-gallery.js"],"names":["swiperVersion","externalSrc","youtube","vimeo","swiperScript","swiperCSS","mediaGallery","loadExternalSrc","src","type","callback","tag","document","createElement","srcAttr","setAttribute","body","appendChild","querySelector","onload","mediaItemEl","querySelectorAll","swiperCSSVar","window","getComputedStyle","documentElement","getPropertyValue","Swiper","mediaViewerEl","mediaViewerWrapEl","getVideoInfo","url","vidInfo","vendor","id","includes","vimeoRegex","vimeoMatch","match","youtubeMatch","videoItem","needYTApi","needVimeoApi","item","videoInfo","getAttribute","length","onYouTubeIframeAPIReady","loadStatus","console","log","loadStatusCount","vimeoBuilderAPI","el","idstring","uniqeuID","Math","floor","random","classList","add","player","Vimeo","Player","on","swiper","pause","addEventListener","youtubeVideoBuilderAPI","YT","videoId","height","width","playerVars","autoplay","controls","showinfo","rel","events","onReady","pauseVideo","html5VideoBuilder","posterSrc","innerHTML","beforeModalFocusItem","currentGroup","forEach","group","mediaGroupItems","mediaSwiperSlideEl","index","e","children","destroy","remove","mediaSwiperDestroy","element","slideEl","cloneNode","videoSrc","mediaEl","mediaElCloned","videoDiv","goToSlide","autoHeight","speed","spaceBetween","navigation","prevEl","nextEl","pagination","keyboard","enabled","slideTo","mediaSwiperBuilder","code","preventDefault","stopPropagation","target","click","barLoaderEl","mediaModalEl","getElementById","setTimeout","modalClosedEvent","Event","dispatchEvent","focus","galleryLoaded"],"mappings":";;;;;;;AASA,MAAMA,cAAgB,SAEhBC,YAAc,CAChBC,QAAS,qCACTC,MAAO,yCACPC,aAAc,4EACdC,UAAW,8EAGTC,aAAe,KAGjB,MAAMC,EAAkB,CAACC,EAAKC,EAAMC,KAChC,MAAMC,EAAgB,WAATF,EAAqBG,SAASC,cAAc,UAAYD,SAASC,cAAc,QACtFC,EAAoB,WAATL,EAAqB,MAAQ,OAEjC,eAATA,GACAE,EAAII,aAAa,MAAO,cAG5BJ,EAAII,aAAaD,EAASN,GAEb,WAATC,EACAG,SAASI,KAAKC,YAAYN,GACV,eAATF,GACPG,SAASM,cAAc,QAAQD,YAAYN,GAG/CA,EAAIQ,OAAST,GAIXU,EAAcR,SAASS,iBAAiB,wBAGxCC,EADeC,OAAOC,iBAAiBZ,SAASa,iBACpBC,iBAAiB,wBAE/CN,IACKE,GACDf,EAAgBN,YAAYI,UAAW,cAGrB,oBAAXsB,QACPpB,EAAgBN,YAAYG,aAAc,WAIlD,MAAMwB,EAAgBhB,SAASM,cAAc,yBACvCW,EAAoBD,EAAcV,cAAc,0BAGhDY,EAAgBC,IAClB,IAAIC,EAAU,CACVC,OAAQ,KACRC,GAAI,MAGR,GAAIH,EAAII,SAAS,aAAc,CAC3B,MAAMC,EAAa,yBACbC,EAAaN,EAAIO,MAAMF,GAE7B,GAAIC,GAAcA,EAAW,GAKzB,OAJAL,EAAU,CACNC,OAAQ,QACRC,GAAIG,EAAW,IAM3B,MACME,EAAeR,EAAIO,MADJ,8FAGrB,OAAIC,GAAgBA,EAAa,GAC7BP,EAAU,CACNC,OAAQ,UACRC,GAAIK,EAAa,IAKlBP,GAILQ,EAAY5B,SAASS,iBAAiB,oBAC5C,IAAIoB,EAAY,KACZC,EAAe,KAEnB,IAAK,MAAMC,KAAQH,EAAW,CAC1B,IAAII,EAAYd,EAAaa,EAAKE,aAAa,mBAEtB,YAArBD,EAAUX,SACVQ,GAAY,GAGS,UAArBG,EAAUX,SACVS,GAAe,GAIvB,GAAID,EAAW,CACsB7B,SAASS,iBAAiB,oDAE7ByB,QAC1BvC,EAAgBN,YAAYC,QAAS,UAGzC6C,wBAA0B,MACtBC,IACAC,QAAQC,IAAI,uBAIpB,GAAIR,EAAc,CACiB9B,SAASS,iBAAiB,wDAE7ByB,QACxBvC,EAAgBN,YAAYE,MAAO,UAI3C,IAAI6C,EAAa,EACbG,EAAkB,EAElBV,IACAU,EAAkB,GAItB,MAAMC,EAAkB,CAACC,EAAIC,KACzB,MAAMC,EAAW,cAAgBC,KAAKC,MAAsB,IAAhBD,KAAKE,UACjDL,EAAGtC,aAAa,KAAMwC,GACtBF,EAAGM,UAAUC,IAAI,gBAEjB,MAAMC,EAAS,IAAIC,MAAMC,OAAOR,EAAU,CACtCrB,GAAIoB,IAIRO,EAAOG,GAAG,SAAU,KAChBpC,EAAcqC,OAAOD,GAAG,cAAe,KACnCH,EAAOK,UAGX3C,OAAO4C,iBAAiB,wBAAyB,KAC7CN,EAAOK,aAMbE,EAAyB,CAACf,EAAIC,KAChC,MAAMC,EAAW,WAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAI9C,IAAIG,EAHJR,EAAGtC,aAAa,KAAMwC,GACtBF,EAAGM,UAAUC,IAAI,aAGjBC,EAAS,IAAIQ,GAAGN,OAAOR,EAAU,CAC7Be,QAAShB,EACTiB,OAAQ,QACRC,MAAO,QACPC,WAAY,CACRC,SAAY,EACZC,SAAY,EACZC,SAAY,EACZC,IAAO,GAEXC,OAAQ,CACJC,QAKR,WACInD,EAAcqC,OAAOD,GAAG,cAAe,KACnCH,EAAOmB,eAGXzD,OAAO4C,iBAAiB,wBAAyB,KAC7CN,EAAOmB,oBAMbC,EAAoB,CAAC5B,EAAI7C,EAAK0E,KAChC,MAAM3B,EAAW,mBAAqBC,KAAKC,MAAsB,IAAhBD,KAAKE,UACtDL,EAAGM,UAAUC,IAAI,sBACjBP,EAAGtC,aAAa,KAAMwC,GACtBF,EAAGtC,aAAa,WAAY,IAC5BsC,EAAGtC,aAAa,cAAe,IAC/BsC,EAAGtC,aAAa,SAAUmE,GAE1B7B,EAAG8B,wCACgB3E,2FAKnB6C,EAAGc,iBAAiB,YAAa,KAC7BvC,EAAcqC,OAAOD,GAAG,cAAe,KACnCX,EAAGa,UAGP3C,OAAO4C,iBAAiB,wBAAyB,KAC7Cd,EAAGa,aA4Cf,IAAIkB,EACAC,EAFezE,SAASS,iBAAiB,kBAIlCiE,QAAQC,IACfA,EAAMxE,aAAa,gBAAiB,gBAAkByC,KAAKC,MAAsB,IAAhBD,KAAKE,WACtE,MAAM8B,EAAkBD,EAAMlE,iBAAiB,wBACzCoE,EAAqB7E,SAASC,cAAc,OAClD4E,EAAmB9B,UAAUC,IAAI,uBACjC6B,EAAmB9B,UAAUC,IAAI,gBAEjC4B,EAAgBF,QAAQ,CAAC3C,EAAM+C,KAG3B/C,EAAK5B,aAAa,OAAQ,UAC1B4B,EAAK5B,aAAa,WAAY,KAC9B4B,EAAK5B,aAAa,aAAc,cAGhC4B,EAAKwB,iBAAiB,QAAUwB,IAG5B,GAAIN,IAAiBE,EAAM1C,aAAa,iBAAkB,CAGlDhB,EAAkB+D,SAAS9C,OAAS,GAnC7B,CAACO,IACPA,IAGbA,EAAGY,OAAO4B,SAAQ,GAAM,GACxBxC,EAAGhC,iBAAiB,wBAAwBiE,QAAQ3C,GAAQA,EAAKmD,YA+BrDC,CAAmBnE,GAGvB,IAAK,MAAMoE,KAAWR,EAAiB,CACnC,MAAMS,EAAUR,EAAmBS,WAAU,GACvCC,EAAWH,EAAQnD,aAAa,kBAChCuD,EAAUJ,EAAQ9E,cAAc,yBAChCmF,EAAgB,EAAYD,EAAQF,WAAU,GAAQ,KAS5D,GAPIG,GACAJ,EAAQhF,YAAYoF,GAGxBxE,EAAkBZ,YAAYgF,GAG1BE,EAAU,CACV,MAAMvD,EAAYd,EAAaqE,GACzBG,EAAiC,OAArB1D,EAAUX,OAAmBrB,SAASC,cAAc,OAASD,SAASC,cAAc,SACtGoF,EAAQhF,YAAYqF,GAEK,YAArB1D,EAAUX,QACVmC,EAAuBkC,EAAU1D,EAAUV,IAGtB,UAArBU,EAAUX,QACVmB,EAAgBkD,EAAU1D,EAAUV,IAGf,OAArBU,EAAUX,QACVgD,EAAkBqB,EAAUH,EAAUE,EAAc7F,KAGpD6F,GACAA,EAAcP,UAjGf,CAACS,IAGxB,MAAMtC,EAAS,IAAItC,OAAO,wBAAyB,CAC/C6E,YAAY,EACZC,MAAO,IACPC,aAAc,EACdC,WAAY,CACRC,OAAQ,6BACRC,OAAQ,8BAEZC,WAAY,CACRzD,GAAI,8BACJ5C,KAAM,YAEVsG,SAAU,CACNC,SAAS,KAKbT,GACAtC,EAAOgD,QAAQV,EAAW,GAAG,IAiFrBW,CAAmBxB,QAEnB9D,EAAcqC,OAAOgD,QAAQvB,EAAO,GAAG,GAI3CN,EAAuBzC,EAEvB0C,EAAeE,EAAM1C,aAAa,mBAItCF,EAAKwB,iBAAiB,UAAYwB,IACf,UAAXA,EAAEwB,MAA+B,UAAXxB,EAAEwB,OACxBxB,EAAEyB,iBACFzB,EAAE0B,kBACF1B,EAAE2B,OAAOC,eAMzB,MAAMC,EAAc5G,SAASM,cAAc,6BAGrCuG,EAAe7G,SAAS8G,eAAe,cAC7C9G,SAASI,KAAKC,YAAYwG,GAE1BA,EAAatD,iBAAiB,iBAAkB,KAC5CwD,WAAW,KACPH,EAAY7D,UAAUC,IAAI,uBAC3B,OAIP,IAAIgE,EAAmB,IAAIC,MAAM,yBACjCJ,EAAatD,iBAAiB,kBAAmB,KAC7C5C,OAAOuG,cAAcF,GAGrBD,WAAW,KACPH,EAAY7D,UAAUmC,OAAO,sBAC7BV,EAAqB2C,SACtB,KAIP,SAASC,IACDhF,IAAeG,EAKnBwE,WAAWK,EAAe,KAJtBpH,SAASa,gBAAgBkC,UAAUC,IAAI,2BAO/CoE","sourcesContent":["/*!\n    * Media Gallery v1.0.0\n    * Display media in a Swiper slider inside a Bootstrap modal.\n    *\n    * Copyright 2024 Blend Interactive\n    * https://blendinteractive.com\n*/\n\n\nconst swiperVersion = '11.0.5';\n\nconst externalSrc = {\n    youtube: 'https://www.youtube.com/iframe_api',\n    vimeo: 'https://player.vimeo.com/api/player.js',\n    swiperScript: `https://cdnjs.cloudflare.com/ajax/libs/Swiper/${swiperVersion}/swiper-bundle.min.js`,\n    swiperCSS: `https://cdnjs.cloudflare.com/ajax/libs/Swiper/${swiperVersion}/swiper-bundle.min.css`\n}\n\nconst mediaGallery = () => {\n    \n    // FUNCTION DEF: load external src\n    const loadExternalSrc = (src, type, callback) => {\n        const tag = (type === 'script') ? document.createElement('script') : document.createElement('link');\n        const srcAttr = (type === 'script') ? 'src' : 'href';\n        \n        if (type === 'stylesheet') {\n            tag.setAttribute('rel', 'stylesheet');\n        }\n        \n        tag.setAttribute(srcAttr, src);\n        \n        if (type === 'script') {\n            document.body.appendChild(tag);\n        } else if (type === 'stylesheet') {\n            document.querySelector('head').appendChild(tag);\n        }\n        \n        tag.onload = callback;\n    }\n\n    // Load swiper assets if needed\n    const mediaItemEl = document.querySelectorAll('.media-gallery__item');\n    \n    const globalStyles = window.getComputedStyle(document.documentElement);\n    const swiperCSSVar = globalStyles.getPropertyValue('--swiper-theme-color');\n    \n    if (mediaItemEl) {\n        if (!swiperCSSVar) {\n            loadExternalSrc(externalSrc.swiperCSS, 'stylesheet');\n        }\n\n        if (typeof Swiper === 'undefined') {\n            loadExternalSrc(externalSrc.swiperScript, 'script');\n        }\n    }\n\n    const mediaViewerEl = document.querySelector('.media-viewer__swiper');\n    const mediaViewerWrapEl = mediaViewerEl.querySelector('.media-viewer__wrapper');\n       \n    // FUNCTION DEF: Return service (youtube or vimeo) as well as video id \n    const getVideoInfo = (url) => {\n        let vidInfo = {\n            vendor: null,\n            id: null\n        };\n    \n        if (url.includes('vimeo.com')) {\n            const vimeoRegex = /\\/(?:playback\\/)?(\\d+)/;\n            const vimeoMatch = url.match(vimeoRegex);\n            \n            if (vimeoMatch && vimeoMatch[1]) {\n                vidInfo = {\n                    vendor: 'vimeo',\n                    id: vimeoMatch[1]\n                }\n                return vidInfo;\n            }\n        }\n        \n        const youtubeRegex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n        const youtubeMatch = url.match(youtubeRegex);\n    \n        if (youtubeMatch && youtubeMatch[1]) {\n            vidInfo = {\n                vendor: 'youtube',\n                id: youtubeMatch[1]\n            }\n            return vidInfo;\n        }\n    \n        return vidInfo;\n    }\n    \n    // Add Youtube or Vimeo API script:src to DOM if needed\n    const videoItem = document.querySelectorAll('[data-video-src]');\n    let needYTApi = null;\n    let needVimeoApi = null;\n    \n    for (const item of videoItem) {\n        let videoInfo = getVideoInfo(item.getAttribute('data-video-src'));\n        \n        if (videoInfo.vendor === 'youtube') {\n            needYTApi = true;\n        }\n        \n        if (videoInfo.vendor === 'vimeo') {\n            needVimeoApi = true;\n        }\n    }\n        \n    if (needYTApi) {\n        const checkForYoutubeAPIScript = document.querySelectorAll('script[src=\"https://www.youtube.com/iframe_api\"]');\n        \n        if (!checkForYoutubeAPIScript.length) {\n            loadExternalSrc(externalSrc.youtube, 'script');\n        }\n        \n        onYouTubeIframeAPIReady = () => {\n            loadStatus++;\n            console.log('Youtube API Ready');\n        }\n    }\n    \n    if (needVimeoApi) {\n        const checkForVimeoAPIScript = document.querySelectorAll('script[src=\"https://player.vimeo.com/api/player.js\"]');\n    \n        if (!checkForVimeoAPIScript.length) {\n            loadExternalSrc(externalSrc.vimeo, 'script');\n        }\n    }\n\n    let loadStatus = 0;\n    let loadStatusCount = 0;\n\n    if (needYTApi) {\n        loadStatusCount = 1;\n    }\n    \n    // FUNCTION DEF: Build vimeo video instance\n    const vimeoBuilderAPI = (el, idstring) => {\n        const uniqeuID = 'vimeoPlayer' + Math.floor(Math.random() * 1000000000);\n        el.setAttribute('id', uniqeuID);\n        el.classList.add('vimeo-player');\n        \n        const player = new Vimeo.Player(uniqeuID, {\n            id: idstring,\n        });\n    \n        // Pause video on swiper slide change\n        player.on('loaded', () => {\n            mediaViewerEl.swiper.on('slideChange', () => {\n                player.pause();\n            });\n\n            window.addEventListener('mediaModalClosedEvent', () => {\n                player.pause();\n            });\n        });\n    }\n    \n    // FUNCTION DEF: Build youtube video instance\n    const youtubeVideoBuilderAPI = (el, idstring) => {\n        const uniqeuID = 'ytPlayer' + Math.floor(Math.random() * 1000000000);\n        el.setAttribute('id', uniqeuID);\n        el.classList.add('yt-player');\n        \n        let player;\n        player = new YT.Player(uniqeuID, {\n            videoId: idstring,\n            height: '20000',\n            width: '20000',\n            playerVars: {\n                'autoplay': 0,\n                'controls': 1,\n                'showinfo': 0,\n                'rel': 0,\n            },\n            events: {\n                'onReady': onPlayerReady,\n            },\n        });\n    \n        // Pause video on swiper slide change\n        function onPlayerReady() {\n            mediaViewerEl.swiper.on('slideChange', () => {\n                player.pauseVideo();\n            });\n\n            window.addEventListener('mediaModalClosedEvent', () => {\n                player.pauseVideo();\n            });\n        }\n    }\n    \n    // FUNCTION DEF: Build HTML5 video instance\n    const html5VideoBuilder = (el, src, posterSrc) => {\n        const uniqeuID = 'html5VideoPlayer' + Math.floor(Math.random() * 1000000000);\n        el.classList.add('html5-video-player');\n        el.setAttribute('id', uniqeuID);\n        el.setAttribute('controls', '');\n        el.setAttribute('playsinline', '');\n        el.setAttribute('poster', posterSrc);\n        \n        el.innerHTML = /* html */`\n            <source src=\"${src}\" type=\"video/mp4\">\n            Your browser does not support the video tag.\n        `;\n    \n        // Pause video on swiper slide change\n        el.addEventListener('loadstart', () => {\n            mediaViewerEl.swiper.on('slideChange', () => {\n                el.pause();\n            });\n\n            window.addEventListener('mediaModalClosedEvent', () => {\n                el.pause();\n            });\n        })\n    }\n    \n    // FUNCTION DEF: Build a new swiper when needed\n    const mediaSwiperBuilder = (goToSlide) => {\n        \n        // Initialize swiper\n        const swiper = new Swiper('.media-viewer__swiper', {\n            autoHeight: true,\n            speed: 400,\n            spaceBetween: 4,\n            navigation: {\n                prevEl: '.media-viewer__button-prev',\n                nextEl: '.media-viewer__button-next'\n            },\n            pagination: {\n                el: '.media-viewer__slide-status',\n                type: 'fraction'\n            },\n            keyboard: {\n                enabled: true\n            }\n        });\n    \n        // Go to slide\n        if (goToSlide) {\n            swiper.slideTo(goToSlide, 0, false)\n        }\n    }\n    \n    // FUNCTION DEF: Destroy swiper instance and remove slide elements from the DOM\n    const mediaSwiperDestroy = (el) => {\n        const swiperEl = el;\n        \n        if (swiperEl) {\n            el.swiper.destroy(true, true);\n            el.querySelectorAll('.media-viewer__slide').forEach(item => item.remove());\n        }\n    }\n    \n    // Setup media modal triggers\n    const mediaGroup = document.querySelectorAll('.media-gallery');\n    let beforeModalFocusItem;\n    let currentGroup;\n    \n    mediaGroup.forEach(group => {\n        group.setAttribute('data-group-id', 'mediaGallery-' + Math.floor(Math.random() * 1000000000));\n        const mediaGroupItems = group.querySelectorAll('.media-gallery__item');\n        const mediaSwiperSlideEl = document.createElement('div');\n        mediaSwiperSlideEl.classList.add('media-viewer__slide');\n        mediaSwiperSlideEl.classList.add('swiper-slide');\n        \n        mediaGroupItems.forEach((item, index) => {\n    \n            // Set some attributes to help with a11y\n            item.setAttribute('role', 'button');\n            item.setAttribute('tabindex', '0');\n            item.setAttribute('aria-label', 'View media');\n    \n            // When media item is clicked, add slides to the swiper wrapper element\n            item.addEventListener('click', (e) => {\n                \n                // If new group is selected setup swiper\n                if (currentGroup !== group.getAttribute('data-group-id')) {\n                    \n                    // Destroy swiper if new group is picked and it contains slide\n                    if (mediaViewerWrapEl.children.length > 0) {\n                        mediaSwiperDestroy(mediaViewerEl);\n                    }\n\n                    for (const element of mediaGroupItems) {\n                        const slideEl = mediaSwiperSlideEl.cloneNode(true);\n                        const videoSrc = element.getAttribute('data-video-src');\n                        const mediaEl = element.querySelector('.media-gallery__media');\n                        const mediaElCloned = (mediaEl) ? mediaEl.cloneNode(true) : null;\n        \n                        if (mediaElCloned) {\n                            slideEl.appendChild(mediaElCloned);\n                        }\n\n                        mediaViewerWrapEl.appendChild(slideEl);\n        \n                        // Replace image with vendor video using their respective API\n                        if (videoSrc) {\n                            const videoInfo = getVideoInfo(videoSrc);\n                            const videoDiv = (videoInfo.vendor !== null) ? document.createElement('div') : document.createElement('video');\n                            slideEl.appendChild(videoDiv);\n                            \n                            if (videoInfo.vendor === 'youtube') {\n                                youtubeVideoBuilderAPI(videoDiv, videoInfo.id);\n                            }\n                            \n                            if (videoInfo.vendor === 'vimeo') {\n                                vimeoBuilderAPI(videoDiv, videoInfo.id);\n                            }\n                            \n                            if (videoInfo.vendor === null) {\n                                html5VideoBuilder(videoDiv, videoSrc, mediaElCloned.src);\n                            }\n                            \n                            if (mediaElCloned) {\n                                mediaElCloned.remove();\n                            }\n                        }\n                    }\n        \n                    // Initialize the media swiper and go to slide that was clicked\n                    mediaSwiperBuilder(index);\n                } else {\n                    mediaViewerEl.swiper.slideTo(index, 0, false);\n                }\n                \n                // Remember last focusable element before modal is shown\n                beforeModalFocusItem = item;\n\n                currentGroup = group.getAttribute('data-group-id');\n            });\n    \n            // Allow the enter key and spacebar to trigger the media modal (like a <button> element would)\n            item.addEventListener('keydown', (e) => {\n                if (e.code === 'Enter' || e.code === 'Space') {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    e.target.click();\n                }\n            });\n        });\n    });\n    \n    const barLoaderEl = document.querySelector('.modal--media .bar-loader');\n   \n    // When media modal is opened do some stuff\n    const mediaModalEl = document.getElementById('mediaModal');\n    document.body.appendChild(mediaModalEl);\n\n    mediaModalEl.addEventListener('shown.bs.modal', () => {\n        setTimeout(() => {\n            barLoaderEl.classList.add('bar-loader--hidden');\n        }, 1000);\n    });\n\n    // When media modal is closed do some stuff\n    let modalClosedEvent = new Event('mediaModalClosedEvent');\n    mediaModalEl.addEventListener('hidden.bs.modal', () => {\n        window.dispatchEvent(modalClosedEvent);\n        \n        // TODO: figure out a better way to do this. Shouldn't have rely on a setTimeout\n        setTimeout(() => {\n            barLoaderEl.classList.remove('bar-loader--hidden');\n            beforeModalFocusItem.focus();\n        }, 5);\n    });\n    \n    // Figure out when the all the media items are ready\n    function galleryLoaded() {\n        if (loadStatus === loadStatusCount) {\n            document.documentElement.classList.add('js-media-gallery--ready');\n            return\n        }\n        \n        setTimeout(galleryLoaded, 300);\n    }\n    \n    galleryLoaded();\n}"]}